{"version":3,"sources":["components/App/App.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js"],"names":["Conteiner","styled","div","ConteinerForm","Button","button","Label","label","Input","input","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","contactForAdd","props","onSubmitData","reset","type","onSubmit","this","pattern","title","required","onChange","Component","List","ul","Info","p","Contact","id","onDelete","onClick","ContactList","contacts","map","uuidv4","defaultProps","Title","h4","Filter","setFilterValue","toUpperCase","setFilterToState","App","filter","formSubmitHandler","data","repeatControl","con","includes","arrayCont","alert","elementDelete","arr","idContact","elem","deleteContactFromContactList","newArrAfterDel","filterData","filterArr","fArr","cont","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.612762f1.chunk.js","sourcesContent":["import styled from '@emotion/styled';\nexport const Conteiner = styled.div`\n  padding: 20px 50px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import styled from '@emotion/styled';\n\nexport const ConteinerForm = styled.div`\n  width: 300px;\n  padding: 20px;\n  display: block;\n  border: 1px solid #477405;\n`;\n\nexport const Button = styled.button`\n  margin: 5px 10px;\n  background-color: #0a0131ab;\n  color: white;\n  border-radius: 7px;\n  border-color: #201068ab;\n  &:hover {\n    background-color: #5b5bbee6;\n    color: #0a0131ab;\n    border-color: #0a0131ab;\n  }\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  max-width: 200px;\n`;\nexport const Input = styled.input`\n  border-radius: 2px;\n\n  &:hover,\n  &:focus {\n    border-color: #4015fffb;\n    border-width: medium;\n  }\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ConteinerForm, Label, Button, Input } from './ContactForm.styled';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    let contactForAdd = { name: this.state.name, number: this.state.number };\n    this.props.onSubmitData(contactForAdd);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    return (\n      <ConteinerForm>\n        <form type=\"submit\" onSubmit={this.handleSubmit}>\n          <Label>\n            Name\n            <Input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              onChange={this.handleChange}\n              value={this.state.name}\n            />\n          </Label>\n          <Label>\n            Number\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n              required\n              onChange={this.handleChange}\n              value={this.state.number}\n            />\n          </Label>\n\n          <Button type=\"submit\">Add contact</Button>\n        </form>\n      </ConteinerForm>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmitData: PropTypes.func.isRequired,\n};\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 10px;\n  margin: 0;\n`;\n","import styled from '@emotion/styled';\nexport const Conteiner = styled.div`\n  display: flex;\n  align-items: baseline;\n`;\nexport const Info = styled.p`\n  margin-right: 10px;\n`;\n\n","import PropTypes from 'prop-types';\nimport { Conteiner, Info } from './Contact.styled';\n\nconst Contact = ({ name, number, id, onDelete }) => (\n  <Conteiner>\n    <Info>{`${name}: ${number}`}</Info>\n    <button data-id={id} onClick={onDelete}>\n      Delete\n    </button>\n  </Conteiner>\n);\nContact.propTypes = {\n  name: PropTypes.array.isRequired,\n  number: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\nexport default Contact;\n","import PropTypes, { number } from 'prop-types';\nimport { List } from './ContactList.styled';\nimport Contact from 'components/Contact/Contact';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst ContactList = ({ contacts, onDelete }) => (\n  <List>\n    {contacts.map(({ id, name, number }) => (\n      <li key={uuidv4()} id={id}>\n        <Contact name={name} number={number} onDelete={() => onDelete(id)} />\n      </li>\n    ))}\n  </List>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\nContactList.defaultProps = {\n  contacts: [],\n};\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Conteiner = styled.div`\n  padding-bottom: 10px;\n`;\nexport const Title = styled.h4`\n  margin: 5px 0;\n  font-size: 18px;\n  font-weight: 500;\n`;\nexport const Input = styled.input`\n  border-radius: 2px;\n\n  &:hover,\n  &:focus {\n    border-color: #3493ff;\n    border-width: thick;\n  }\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Conteiner, Title, Input } from './Filter.styled';\n\nclass Filter extends Component {\n  setFilterValue = event => {\n    let value = event.currentTarget.value.toUpperCase();\n    this.props.setFilterToState(value);\n  };\n\n  render() {\n    return (\n      <Conteiner>\n        <Title>Find contacts by name</Title>\n        <Input onChange={this.setFilterValue}></Input>\n      </Conteiner>\n    );\n  }\n}\n\nFilter.propTypes = {\n  setFilterToState: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Conteiner } from './App.styled';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  formSubmitHandler = data => {\n    this.repeatControl(data);\n  };\n\n  repeatControl = data => {\n    let nameArray = [];\n    nameArray = this.state.contacts.map(con => con.name);\n    if (!nameArray.includes(data.name)) {\n      let arrayCont = [];\n      arrayCont = [\n        ...this.state.contacts,\n        { id: uuidv4(), name: data.name, number: data.number },\n      ];\n      return this.setState({ ...this.state, contacts: arrayCont });\n    } else {\n      alert(`${data.name} вже є у телефонній книзі!!!`);\n    }\n  };\n\n  elementDelete = (arr, idContact) => {\n    let newArr = arr.filter(elem => elem.id !== idContact);\n    return newArr;\n  };\n\n  deleteContactFromContactList = idContact => {\n    let newArrAfterDel = this.elementDelete(this.state.contacts, idContact);\n    this.setState({\n      ...this.state,\n      contacts: [...newArrAfterDel],\n    });\n  };\n\n  setFilterToState = filterData => {\n    this.setState({ ...this.state, filter: `${filterData}` });\n  };\n\n  filterArr = fArr => {\n    let newArr = fArr.filter(cont =>\n      cont.name.toUpperCase().includes(this.state.filter),\n    );\n    return newArr;\n  };\n\n  render() {\n    return (\n      <Conteiner>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmitData={this.formSubmitHandler} />\n        <h1>Contacts</h1>\n        <Filter setFilterToState={this.setFilterToState} />\n        <ContactList\n          contacts={this.filterArr(this.state.contacts)}\n          onDelete={this.deleteContactFromContactList}\n        />\n      </Conteiner>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}