{"version":3,"sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["ConteinerForm","styled","div","Button","button","Label","label","Input","input","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmitData","resetState","onSubmit","this","type","pattern","title","required","onChange","Component","List","ul","Conteiner","Info","p","Contact","id","onDelete","onClick","ContactList","contacts","map","defaultProps","Title","h4","Filter","setFilterValue","toUpperCase","setFilterToState","App","filter","formSubmit","data","prevState","newContact","uuidv4","find","contact","alert","elementDelete","contactId","elem","deleteContactFromContactList","newContacAtfterDel","filterData","filterArr","fArr","cont","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAEaA,EAAgBC,IAAOC,IAAV,gHAObC,EAASF,IAAOG,OAAV,iXAeNC,EAAQJ,IAAOK,MAAV,8FAKLC,EAAQN,IAAOO,MAAV,gI,OCsCHC,E,4MA9DbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAEVC,aAAe,SAAAC,GACb,MAAwBA,EAAMC,cAAtBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAMK,iBAEN,EAAKC,MAAMC,aAAa,CACtBV,KAAM,EAAKD,MAAMC,KACjBC,OAAQ,EAAKF,MAAME,SAGrB,EAAKU,c,EAGPA,WAAa,WACX,EAAKL,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,4CAEpC,WACE,OACE,cAACZ,EAAD,UACE,uBAAMuB,SAAUC,KAAKN,aAArB,UACE,eAACb,EAAD,kBAEE,cAACE,EAAD,CACEkB,KAAK,OACLd,KAAK,OACLe,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUL,KAAKX,aACfG,MAAOQ,KAAKd,MAAMC,UAGtB,eAACN,EAAD,oBAEE,cAACE,EAAD,CACEkB,KAAK,MACLd,KAAK,SACLe,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,EACRC,SAAUL,KAAKX,aACfG,MAAOQ,KAAKd,MAAME,YAItB,cAACT,EAAD,CAAQsB,KAAK,SAAb,kC,GArDgBK,aCFbC,EAAO9B,IAAO+B,GAAV,4DCDJC,EAAYhC,IAAOC,IAAV,wEAITgC,EAAOjC,IAAOkC,EAAV,mDAGJhC,EAASF,IAAOG,OAAV,+QCSJgC,EAdC,SAAC,GAAD,IAAGzB,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQyB,EAAjB,EAAiBA,GAAIC,EAArB,EAAqBA,SAArB,OACd,eAACL,EAAD,WACE,cAACC,EAAD,oBAAUvB,EAAV,aAAmBC,KACnB,cAAC,EAAD,CAAQ,UAASyB,EAAIE,QAASD,EAA9B,wBCFEE,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUH,EAAb,EAAaA,SAAb,OAClB,cAACP,EAAD,UACGU,EAASC,KAAI,YAA2B,IAAxBL,EAAuB,EAAvBA,GAAI1B,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACzB,OACE,6BACE,cAAC,EAAD,CACEyB,GAAIA,EACJ1B,KAAMA,EACNC,OAAQA,EACR0B,SAAU,kBAAMA,EAASD,OALpBA,SAuBjBG,EAAYG,aAAe,CACzBF,SAAU,IAEGD,I,QAAAA,IChCFP,EAAYhC,IAAOC,IAAV,qDAGT0C,EAAQ3C,IAAO4C,GAAV,uFAKLtC,EAAQN,IAAOO,MAAV,2HCaHsC,E,4MAlBbC,eAAiB,SAAAjC,GACf,IAAIE,EAAQF,EAAMC,cAAcC,MAAMgC,cACtC,EAAK5B,MAAM6B,iBAAiBjC,I,4CAG9B,WACE,OACE,eAAC,EAAD,WACE,cAAC4B,EAAD,oCACA,cAAC,EAAD,CAAOf,SAAUL,KAAKuB,wB,GAVTjB,aCHRG,EAAYhC,IAAOC,IAAV,gGCuEPgD,E,4MAhEbxC,MAAQ,CACN+B,SAAU,CACR,CAAEJ,GAAI,OAAQ1B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEyB,GAAI,OAAQ1B,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEyB,GAAI,OAAQ1B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEyB,GAAI,OAAQ1B,KAAM,iBAAkBC,OAAQ,cAEhDuC,OAAQ,I,EAGVC,WAAa,SAAAC,GACX,EAAKpC,UAAS,SAAAqC,GACZ,IAAMC,EAAa,CAAElB,GAAImB,cAAU7C,KAAM0C,EAAK1C,KAAMC,OAAQyC,EAAKzC,QAIjE,OAHyB0C,EAAUb,SAASgB,MAAK,SAAAC,GAC/C,OAAOA,EAAQ/C,OAAS0C,EAAK1C,SAG7BgD,MAAM,GAAD,OAAIN,EAAK1C,KAAT,qIACE,eAAK2C,IAEP,EAAKrC,SAAL,2BACF,EAAKP,OADH,IAEL+B,SAAS,GAAD,mBAAMa,EAAUb,UAAhB,CAA0Bc,W,EAKxCK,cAAgB,SAACF,EAASG,GACxB,OAAOH,EAAQP,QAAO,SAAAW,GAAI,OAAIA,EAAKzB,KAAOwB,M,EAG5CE,6BAA+B,SAAAF,GAC7B,IAAIG,EAAqB,EAAKJ,cAAc,EAAKlD,MAAM+B,SAAUoB,GACjE,EAAK5C,SAAL,2BACK,EAAKP,OADV,IAEE+B,SAAS,YAAKuB,O,EAIlBf,iBAAmB,SAAAgB,GACjB,EAAKhD,SAAL,2BAAmB,EAAKP,OAAxB,IAA+ByC,OAAO,GAAD,OAAKc,O,EAG5CC,UAAY,SAAAC,GACV,OAAOA,EAAKhB,QAAO,SAAAiB,GAAI,OACrBA,EAAKzD,KAAK0D,cAAcC,SAAS,EAAK5D,MAAMyC,OAAOkB,mB,4CAIvD,WACE,OACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,CAAahD,aAAcG,KAAK4B,aAChC,0CACA,cAAC,EAAD,CAAQH,iBAAkBzB,KAAKyB,mBAC/B,cAAC,EAAD,CACER,SAAUjB,KAAK0C,UAAU1C,KAAKd,MAAM+B,UACpCH,SAAUd,KAAKuC,sC,GA3DPjC,aCFlByC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.be8f6af0.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const ConteinerForm = styled.div`\n  width: 300px;\n  padding: 20px;\n  display: block;\n  border: 1px solid #477405;\n`;\n\nexport const Button = styled.button`\n  margin: 5px 10px;\n  background-color: #0a0131ab;\n  color: white;\n  border-radius: 7px;\n  border-color: #201068ab;\n  cursor: pointer;\n  transition-delay: 250ms;\n  transition-timing-function: cubic-bezier(0.29, 1.01, 1, -0.68);\n  &:hover {\n    background-color: #5b5bbee6;\n    color: #0a0131ab;\n    border-color: #0a0131ab;\n  }\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  max-width: 200px;\n`;\nexport const Input = styled.input`\n  border-radius: 2px;\n\n  &:focus {\n    border-color: #4015fffb;\n    border-width: medium;\n  }\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ConteinerForm, Label, Button, Input } from './ContactForm.styled';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    this.props.onSubmitData({\n      name: this.state.name,\n      number: this.state.number,\n    });\n\n    this.resetState();\n  };\n\n  resetState = () => {\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    return (\n      <ConteinerForm>\n        <form onSubmit={this.handleSubmit}>\n          <Label>\n            Name\n            <Input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              onChange={this.handleChange}\n              value={this.state.name}\n            />\n          </Label>\n          <Label>\n            Number\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n              required\n              onChange={this.handleChange}\n              value={this.state.number}\n            />\n          </Label>\n\n          <Button type=\"submit\">Add contact</Button>\n        </form>\n      </ConteinerForm>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmitData: PropTypes.func.isRequired,\n};\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 10px;\n  margin: 0;\n`;\n","import styled from '@emotion/styled';\nexport const Conteiner = styled.div`\n  display: flex;\n  align-items: baseline;\n`;\nexport const Info = styled.p`\n  margin-right: 10px;\n`;\nexport const Button = styled.button`\n  border-radius: 3px;\n  transition-delay: 250ms;\n  transition-timing-function: cubic-bezier(0.29, 1.01, 1, -0.68);\n  cursor: pointer;\n  &:hover {\n    background-color: #2d2db6e6;\n    color: #f4f3f7ab;\n    border-color: #0a0131ab;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Conteiner, Info, Button } from './Contact.styled';\n\nconst Contact = ({ name, number, id, onDelete }) => (\n  <Conteiner>\n    <Info>{`${name}: ${number}`}</Info>\n    <Button data-id={id} onClick={onDelete}>\n      Delete\n    </Button>\n  </Conteiner>\n);\nContact.propTypes = {\n  name: PropTypes.array.isRequired,\n  number: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\nexport default Contact;\n","import PropTypes from 'prop-types';\nimport { List } from './ContactList.styled';\nimport Contact from 'components/Contact/Contact';\n\nconst ContactList = ({ contacts, onDelete }) => (\n  <List>\n    {contacts.map(({ id, name, number }) => {\n      return (\n        <li key={id}>\n          <Contact\n            id={id}\n            name={name}\n            number={number}\n            onDelete={() => onDelete(id)}\n          />\n        </li>\n      );\n    })}\n  </List>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\nContactList.defaultProps = {\n  contacts: [],\n};\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Conteiner = styled.div`\n  padding-bottom: 10px;\n`;\nexport const Title = styled.h4`\n  margin: 5px 0;\n  font-size: 18px;\n  font-weight: 500;\n`;\nexport const Input = styled.input`\n  border-radius: 2px;\n\n  &:focus {\n    border-color: #3493ff;\n    border-width: 4px;\n  }\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Conteiner, Title, Input } from './Filter.styled';\n\nclass Filter extends Component {\n  setFilterValue = event => {\n    let value = event.currentTarget.value.toUpperCase();\n    this.props.setFilterToState(value);\n  };\n\n  render() {\n    return (\n      <Conteiner>\n        <Title>Find contacts by name</Title>\n        <Input onChange={this.setFilterValue}></Input>\n      </Conteiner>\n    );\n  }\n}\n\nFilter.propTypes = {\n  setFilterToState: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import styled from '@emotion/styled';\nexport const Conteiner = styled.div`\n  padding: 20px 50px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { Conteiner } from './App.styled';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  formSubmit = data => {\n    this.setState(prevState => {\n      const newContact = { id: uuidv4(), name: data.name, number: data.number };\n      const duplicateContact = prevState.contacts.find(contact => {\n        return contact.name === data.name;\n      });\n      if (duplicateContact) {\n        alert(`${data.name} вже є у телефонній книзі!!!`);\n        return { ...prevState };\n      }\n      return this.setState({\n        ...this.state,\n        contacts: [...prevState.contacts, newContact],\n      });\n    });\n  };\n\n  elementDelete = (contact, contactId) => {\n    return contact.filter(elem => elem.id !== contactId);\n  };\n\n  deleteContactFromContactList = contactId => {\n    let newContacAtfterDel = this.elementDelete(this.state.contacts, contactId);\n    this.setState({\n      ...this.state,\n      contacts: [...newContacAtfterDel],\n    });\n  };\n\n  setFilterToState = filterData => {\n    this.setState({ ...this.state, filter: `${filterData}` });\n  };\n\n  filterArr = fArr => {\n    return fArr.filter(cont =>\n      cont.name.toLowerCase().includes(this.state.filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    return (\n      <Conteiner>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmitData={this.formSubmit} />\n        <h1>Contacts</h1>\n        <Filter setFilterToState={this.setFilterToState} />\n        <ContactList\n          contacts={this.filterArr(this.state.contacts)}\n          onDelete={this.deleteContactFromContactList}\n        />\n      </Conteiner>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}